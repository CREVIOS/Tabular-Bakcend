# version: "3.8"

services:
  # Redis - Keep internal only for security
  tabular-redis:
    image: redis:8.0-alpine
    container_name: tabular-review-redis
    ports:
      - "127.0.0.1:6380:6379" # Internal only - Redis should not be public
    volumes:
      - tabular-redis-data:/data
    command: redis-server --save 60 1 --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru --port 6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
    networks:
      - tabular-backend

  # Main API Backend - External access enabled
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-backend
    env_file:
      - .env
    environment:
      - HOME=/tmp/app
      - TMPDIR=/tmp/app
      - REDIS_URL=redis://tabular-redis:6379
      # Production environment variables
      - GUNICORN_WORKERS=3
      - GUNICORN_THREADS=2
      - GUNICORN_TIMEOUT=120
      - GUNICORN_GRACEFUL_TIMEOUT=30
    working_dir: /app/backend
    command: >
      gunicorn main:app
      -k uvicorn.workers.UvicornWorker
      -w ${GUNICORN_WORKERS:-3}
      --threads ${GUNICORN_THREADS:-2}
      --timeout ${GUNICORN_TIMEOUT:-120}
      --graceful-timeout ${GUNICORN_GRACEFUL_TIMEOUT:-30}
      --preload
      --bind 0.0.0.0:8000
      --access-logfile -
      --error-logfile -
      --access-logformat '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s" %(D)s'
    volumes:
      - ./backend:/app/backend
      - tabular-uploads:/app/uploads
      - tabular-tmp:/tmp/app
    ports:
      - "8001:8000" # External access enabled - Remove 127.0.0.1 binding
    depends_on:
      tabular-redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.8"
    networks:
      - tabular-backend

  # Celery Worker
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-celery-worker
    working_dir: /app/backend
    command: celery -A celery_app worker --loglevel=info --concurrency=${CELERY_WORKER_CONCURRENCY:-2} --max-tasks-per-child=${CELERY_MAX_TASKS_PER_CHILD:-1000}
    env_file:
      - .env
    environment:
      - HOME=/tmp/app
      - TMPDIR=/tmp/app
      - REDIS_URL=redis://tabular-redis:6379
    volumes:
      - ./backend:/app/backend
      - tabular-uploads:/app/uploads
      - tabular-tmp:/tmp/app
    depends_on:
      tabular-redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "celery -A celery_app inspect ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 800M
          cpus: "0.6"
    networks:
      - tabular-backend

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-celery-beat
    working_dir: /app/backend
    command: celery -A celery_app beat --loglevel=info --schedule=/tmp/app/celerybeat-schedule
    env_file:
      - .env
    environment:
      - HOME=/tmp/app
      - TMPDIR=/tmp/app
      - REDIS_URL=redis://tabular-redis:6379
    volumes:
      - ./backend:/app/backend
      - tabular-uploads:/app/uploads
      - tabular-tmp:/tmp/app
    depends_on:
      tabular-redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[c]elery.*beat' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.3"
    networks:
      - tabular-backend

  # Flower Monitoring - Keep internal only for security
  celery-flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-celery-flower
    working_dir: /app/backend
    command: celery -A celery_app flower --port=5555 --broker=redis://tabular-redis:6379
    ports:
      - "127.0.0.1:5556:5555" # Internal only - monitoring should not be public
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://tabular-redis:6379
    depends_on:
      - tabular-redis
      - celery-worker
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5555 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"
    networks:
      - tabular-backend
    profiles:
      - development

volumes:
  tabular-redis-data:
    driver: local
  tabular-uploads:
    driver: local
  tabular-tmp:
    driver: local

networks:
  tabular-backend:
    driver: bridge
    name: tabular-review-network
    ipam:
      config:
        - subnet: 172.20.0.0/16

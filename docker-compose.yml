# version: "3.8"

services:
  # Use a separate Redis instance to avoid conflicts
  tabular-redis:
    image: redis:8.0-alpine
    container_name: tabular-review-redis
    ports:
      - "127.0.0.1:6380:6379" # Different port to avoid conflict
    volumes:
      - tabular-redis-data:/data
    command: redis-server --save 60 1 --loglevel warning --maxmemory 256mb --maxmemory-policy allkeys-lru --port 6379
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
    networks:
      - tabular-backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-backend
    env_file:
      - .env
    environment:
      - HOME=/tmp/app
      - TMPDIR=/tmp/app
      - REDIS_URL=redis://tabular-redis:6379
    working_dir: /app/backend
    command: >
      gunicorn main:app
      -k uvicorn.workers.UvicornWorker
      -w 3
      --threads 2
      --timeout 120
      --graceful-timeout 30
      --preload
      --bind 0.0.0.0:8000
      --access-logfile -
      --error-logfile -
    volumes:
      - ./backend:/app/backend
      - tabular-uploads:/app/uploads
      - tabular-tmp:/tmp/app
    ports:
      - "127.0.0.1:8001:8000" # Use port 8001 to avoid conflicts, bind to localhost only
    depends_on:
      tabular-redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.8" # Reduced to leave resources for existing services
    networks:
      - tabular-backend

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-celery-worker
    working_dir: /app/backend
    command: celery -A celery_app worker --loglevel=info --concurrency=2 --max-tasks-per-child=1000
    env_file:
      - .env
    environment:
      - HOME=/tmp/app
      - TMPDIR=/tmp/app
      - REDIS_URL=redis://tabular-redis:6379
    volumes:
      - ./backend:/app/backend
      - tabular-uploads:/app/uploads
      - tabular-tmp:/tmp/app
    depends_on:
      tabular-redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 800M
          cpus: "0.6"
    networks:
      - tabular-backend

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-celery-beat
    working_dir: /app/backend
    command: celery -A celery_app beat --loglevel=info --schedule=/tmp/app/celerybeat-schedule
    env_file:
      - .env
    environment:
      - HOME=/tmp/app
      - TMPDIR=/tmp/app
      - REDIS_URL=redis://tabular-redis:6379
    volumes:
      - ./backend:/app/backend
      - tabular-uploads:/app/uploads
      - tabular-tmp:/tmp/app
    depends_on:
      tabular-redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.3"
    networks:
      - tabular-backend

  # Optional: Flower for monitoring (only in development)
  celery-flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tabular-review-celery-flower
    working_dir: /app/backend
    command: celery -A celery_app flower --port=5555 --broker=redis://tabular-redis:6379
    ports:
      - "127.0.0.1:5556:5555" # Different port to avoid conflicts
    env_file:
      - .env
    environment:
      - REDIS_URL=redis://tabular-redis:6379
    depends_on:
      - tabular-redis
      - celery-worker
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"
    networks:
      - tabular-backend
    profiles:
      - development

volumes:
  tabular-redis-data:
    driver: local
  tabular-uploads:
    driver: local
  tabular-tmp:
    driver: local

networks:
  tabular-backend:
    driver: bridge
    name: tabular-review-network
    # Use custom subnet to avoid conflicts with existing networks
    ipam:
      config:
        - subnet: 172.20.0.0/16
